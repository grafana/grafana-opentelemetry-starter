name: CI

on:
  push:
    branches: [main]
    tags: ['**']
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        java: ['17']
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.5
      - name: Test and build Jar
        uses: gradle/gradle-build-action@v2.4.2
        env:
          CHECK_GENERATED_FILES: true
        with:
          arguments: test jar
  publish:
    needs: [ build ]
    if: always() && (needs.build.result == 'success') && github.repository == 'grafana/grafana-opentelemetry-starter' && github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.5
      - name: Publish package
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
